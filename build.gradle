// 1. queryDsl version 정보 추가
buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'kfq'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	/* JPA 관련 디펜던시 */
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	/*QueryDSL 설정*/
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	/* 스프링 톰캣 관련 디팬던시 */
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat' //오류발생 주석처리
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.projectlombok:lombok:1.18.22'

    /* 자동반영 */
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	/* mysql */
	runtimeOnly 'com.mysql:mysql-connector-j'

	/* Lombok */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'


	/* Quartz 라이브러리 */
//	implementation 'org.quartz-scheduler:quartz:2.3.2'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'

	//레시피 db 가져오기 위함 gson
	implementation 'com.google.code.gson:gson:2.8.8'



	/* Security 오류 발생 임시 주석처리 */
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	/* JWT 토큰관련 디펜던시 추후 주석 제거후 사용 */
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named('test') {
	useJUnitPlatform()
}


/* -------------------------------------------------QueryDSL 추가설정 ---------------------------------------------------*/
// querydsl 사용할 경로 지정합니다. 현재 지정한 부분은 .gitignore에 포함되므로 git에 올라가지 않습니다.
def querydslDir = "$buildDir/generated/'querydsl'"

// JPA 사용여부 및 사용 경로 설정
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

// build시 사용할 sourceSet 추가 설정
sourceSets {
	main.java.srcDir querydslDir
}

// querydsl 컴파일 시 사용할 옵션 설정
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

// querydsl이 compileClassPath를 상속하도록 설정
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
